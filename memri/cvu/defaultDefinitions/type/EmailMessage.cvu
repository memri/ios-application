[session = all-email-messages] {
    [view] {
        title: "All Emails"
        [datasource = pod] {
            query: "EmailMessage AND NOT ANY allEdges.targetItemType = 'message'"
        }
    }
}


EmailMessage[] {
    title: "All Emails"
    emptyResultText: "There are no emails here yet"
    defaultRenderer: emailThread
    filterButtons: showStarred toggleFilterPanel
    sortFields: subject dateModified dateAccessed dateCreated
    
    [datasource = pod] {
        sortProperty: dateSent
        sortAscending: true
    }
    
    actionButton:
        addItem {
            template {
                _type: EmailMessage
            }
        }
        
    editActionButton: toggleEditMode
    
    [renderer = list] {
        press: openView {
            view: {
                [datasource = list] {
                    list: {{ chain(head.~message).list }}
                }
            }
            viewArguments: {
                head: {{ chain(.~message).head }}
            }
        }
        
        VStack {
            alignment: left
            spacing: 3
            
            HStack {
                alignment: left
                
                Text {
                    text: {{.sender.owner.firstName}}
                    lineLimit: 1
                    font: 18 semibold
                    color: #333
                    padding: 0 0 0 0
                }
                Image {
                    systemName: "star.fill"
                    font: 14
                    color: #eecc00
                    margin: 5
                    show: {{.starred}}
                }
                Spacer
                Text {
                    text: "{.dateModified.format('time')}" /* TODO: Short */
                    lineLimit: 1
                    font: 11 regular
                    color: #888
                    padding: 0 0 0 0
                }
            }
            Text {
                text: {{.subject or "[No subject]"}}
                lineLimit: 1
                font: 18 regular
                color: #666
                padding: 0 0 0 0
            }
            Text {
                text: "{.content.plainString}"
                lineLimit: 2
                removeWhiteSpace: true
                maxChar: 100
                color: #999
                font: 14 regular
            }
            
        }
    }
    
    [renderer = emailThread] {
        background: #D3E4D1
        content: {{.content}}
        
        HStack {
            spacing: 10
            ZStack {
                width: 50
                height: 50
                Circle {
                    color: #000000
                }
                Text {
                    text: "AA"
                    color: #FFFFFF
                }
            }
            VStack {
                alignment: leading
                spacing: 4
                HStack {
                    Text {
                        text: "{.subject}"
                    }
                    Spacer
                    Text {
                        text: "{.dateSent}"
                        color: #666
                    }
                }
                HStack {
                    Text {
                        text: "{.sender.owner.fullName()}"
                        color: #666
                    }
                    Spacer
                }
            }
        }
    }
    
}
